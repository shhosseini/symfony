jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        NEWS\BlogBundle\Entity\Author: plaintext
#          algorithm:        sha1
#          encode_as_base64: false
#          iterations:       1

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
#        chain_provider:
#            chain:
#                providers: [user_db, in_memory]
        user_db:
            entity: { class: NEWSBlogBundle:Author , property: username }
#
#        in_memory:
#            memory:
#                users:
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] } #user:  { password: userpass, roles: [ 'ROLE_USER' ] }

#          main_provider:
#                memory:
#                    users:
#                        admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#                entity:
#                    class: NEWSBlogBundle:Author,
#                    property: username
#




    firewalls:
        admin_area:
                    pattern:    ^/admin
                    http_basic: ~
        secured_area:
                    pattern:  ^/
                    anonymous: ~
                    form_login:
                        login_path: /Login
                        check_path: /login_check
                        username_parameter: username
                        password_parameter: password

                    logout:
                        path: /logout
                        target: /blog


 #       dev:
  #           pattern:  ^/(_(profiler|wdt)|css|images|js)/
    #          security: false

#        login:
#                #pattern:  ^/demo/secured/login$
#                pattern:  ^/Login$
#                security: false
#
#        secured_area:
#                pattern:    ^/demo/secured/
#                form_login:
#                    check_path: _security_check
#                    login_path: _demo_login
#                logout:
#                    path:   _demo_logout
#                    target: _demo
                #anonymous: ~
                #http_basic:
                #    realm: "Secured Demo Area"
    access_control:
         #- { path: ^/Login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/newpost, roles: ROLE_USER }

        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
